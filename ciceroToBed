#! /usr/bin/env python3
#
# Vivek Rai
# mail@raivivek.in
# (c) Parker Lab
#
# Jul 15, 2019
# GPLv3


import docopt
import sys
import signal
import pathlib

doc = """
    ciceroToBed

    Convert cicero connections to BED file. Writes to STDOUT.

    Usage: ciceroToBed <cicero>

    Options:
    <cicero>        Cicero output file
    -h, --help      Show help
"""


def convert_to_bed(cicero):
    conns = dict()
    with open(cicero, "r") as f:
        for line in f:
            loop1 = line.split("\t")[0]
            conns[loop1.strip()] = 1

        for k in conns.keys():
            tab = "\t"
            sys.stdout.write(f"{tab.join(k.split('_'))}\n")


if __name__ == "__main__":
    # Register SIGNIT handler for graceful exit
    # See: https://stackoverflow.com/questions/4205317
    signal.signal(signal.SIGINT, lambda s, f: sys.exit(0))

    # Simple argument parsing
    opts = docopt.docopt(doc, version="0.1.0")
    cicero_path = pathlib.Path(opts["<cicero>"])

    # Exit early if the path does not exist
    if not cicero_path.exists():
        print("Error: File not found. Exit", file=sys.stderr)
        sys.exit(1)

    convert_to_bed(cicero_path)
